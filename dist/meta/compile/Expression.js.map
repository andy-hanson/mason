{"version":3,"sources":["meta/compile/Expression.js"],"names":[],"mappings":"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","file":"meta/compile/Expression.js","sourcesContent":["import Loc from 'esast/dist/Loc'\nimport { JsGlobals, KAssign, KFun, SpecialKeywords } from './private/Lang'\nimport Op, { None } from './private/U/Op'\nimport { tuple } from './private/U/types'\nimport { setUnion } from './private/U/util'\n\nexport default class Expression { }\n// These can only appear as lines in a Block.\n// Not to be confused with Generator expressions resulting from `do` keyword.\nexport class Do extends Expression { }\n// These can appear in any expression.\nexport class Val extends Expression { }\n\n// TODO:ES6 splat\nconst ee = function() { return tuple(Expression, 'loc', Loc, ...arguments) }\nconst ed = function() { return tuple(Do, 'loc', Loc, ...arguments) }\nconst ev = function() { return tuple(Val, 'loc', Loc, ...arguments) }\n\n// TODO: Get rid of null\nconst KSpecial = setUnion(SpecialKeywords, [ 'contains', 'debugger', 'sub', 'null' ])\n\nexport const\n\tDebug = ed('lines', [Expression]),\n\tBlockDo = ed('lines', [Expression]),\n\tBlockVal = ed('lines', [Expression], 'returned', Val),\n\tModuleDefaultExport = ed('value', Val),\n\tLocalDeclare = Object.assign(\n\t\tee('name', String, 'opType', Op(Val), 'isLazy', Boolean, 'okToNotUse', Boolean),\n\t\t{\n\t\t\tfocus: loc => LocalDeclare(loc, '_', None, false, false),\n\t\t\tres: (loc, opType) => LocalDeclare(loc, 'res', opType, false, true)\n\t\t}),\n\tAssign = Object.assign(\n\t\ted('assignee', LocalDeclare, 'k', KAssign, 'value', Val),\n\t\t{ focus: (loc, value) => Assign(loc, LocalDeclare.focus(loc), '=', value) }),\n\tAssignDestructure = ed(\n\t\t'assignees', [LocalDeclare],\n\t\t'k', KAssign,\n\t\t'value', Val,\n\t\t'isLazy', Boolean),\n\tLocalAccess = Object.assign(\n\t\tev('name', String),\n\t\t{ focus: loc => LocalAccess(loc, '_') }),\n\tGlobalAccess = Object.assign(\n\t\tev('name', JsGlobals),\n\t\t{\n\t\t\tnull: loc => GlobalAccess(loc, 'null'),\n\t\t\ttrue: loc => GlobalAccess(loc, 'true')\n\t\t}),\n\t// Module\n\tUseDo = ee('path', String),\n\tUse = ee('path', String, 'used', [LocalDeclare], 'opUseDefault', Op(LocalDeclare)),\n\t// `block` will contain ModuleExport and ModuleDefaultExport_s\n\t// TODO: BlockVal and don't have `exports` object\n\tModule = ee('doUses', [UseDo], 'uses', [Use], 'debugUses', [Use], 'block', BlockDo),\n\n\t// Data\n\t// TODO: Don't store index here, do it in Vr\n\tListEntry = ed('value', Val, 'index', Number),\n\t// TODO: Don't store length here, do it in Vr\n\tListReturn = ev('length', Number),\n\tListSimple = ev('parts', [Val]),\n\n\t// TODO: Don't store index here, do it in Vr\n\tMapEntry = ed('key', Val, 'val', Val, 'index', Number),\n\t// TODO: Don't store length here, do it in Vr\n\tMapReturn = ev('length', Number),\n\tObjReturn = ev(\n\t\t'keys', [LocalDeclare],\n\t\t'debugKeys', [LocalDeclare],\n\t\t'opObjed', Op(Val),\n\t\t'opDisplayName', Op(String)),\n\t// keysVals: values are Vals\n\tObjSimple = ev('keysVals', Object),\n\n\t// Case\n\tCaseDoPart = ee('test', Val, 'result', BlockDo),\n\tCaseValPart = ee('test', Val, 'result', BlockVal),\n\tCaseDo = ed('opCased', Op(Assign), 'parts', [CaseDoPart], 'opElse', Op(BlockDo)),\n\t// Unlike CaseDo, this has `return` statements.\n\tCaseVal = ev('opCased', Op(Assign), 'parts', [CaseValPart], 'opElse', Op(BlockVal)),\n\n\t// Statements\n\tLoop = ed('block', BlockDo),\n\tEndLoop = ed(),\n\n\t// Generators\n\tYield = ev('yielded', Val),\n\tYieldTo = ev('yieldedTo', Val),\n\n\t// Expressions\n\tCall = Object.assign(\n\t\tev('called', Val, 'args', [Val]),\n\t\t{\n\t\t\tcontains: (loc, testType, tested) =>\n\t\t\t\tCall(loc, Special.contains(loc), [ testType, tested ]),\n\t\t\tsub: (loc, args) => Call(loc, Special.sub(loc), args)\n\t\t}),\n\t// Only for use in a Call\n\tSplat = ev('splatted', Val),\n\n\tBlockWrap = ev('block', BlockVal),\n\n\tFun = ev(\n\t\t'k', KFun,\n\t\t'args', [LocalDeclare],\n\t\t'opRestArg', Op(LocalDeclare),\n\t\t// BlockDo or BlockVal\n\t\t'block', Expression,\n\t\t'opIn', Op(Debug),\n\t\t// If non-empty, block should be a BlockVal, and either it has a type or opOut is non-empty.\n\t\t'opResDeclare', Op(LocalDeclare),\n\t\t'opOut', Op(Debug)),\n\n\tLazy = ev('value', Val),\n\tELiteral = ev('value', String, 'k', new Set([Number, String, 'js'])),\n\tMember = ev('object', Val, 'name', String),\n\tQuote = ev('parts', [Val]),\n\n\tSpecial = Object.assign(\n\t\tev('k', KSpecial),\n\t\t{\n\t\t\tcontains: loc => Special(loc, 'contains'),\n\t\t\tdebugger: loc => Special(loc, 'debugger'),\n\t\t\tsub: loc => Special(loc, 'sub')\n\t\t})\n\n"],"sourceRoot":"/src"}