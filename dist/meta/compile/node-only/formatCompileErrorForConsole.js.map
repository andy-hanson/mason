{"version":3,"sources":["meta/compile/node-only/formatCompileErrorForConsole.js"],"names":[],"mappings":";;;;;;;;KAAS,IAAI,UAAJ,IAAI;KAAE,KAAK,UAAL,KAAK;KAAE,OAAO,UAAP,OAAO;KAAE,IAAI,UAAJ,IAAI;;KAC5B,YAAY;;KAAI,OAAO,iBAAP,OAAO;KAAE,UAAU,iBAAV,UAAU;;KACnC,IAAI;;KACF,OAAO,gBAAP,OAAO;;KACT,IAAI;;KACF,MAAM,iBAAN,MAAM;;mBAEA,UAAC,KAAK,EAAE,UAAU;SAAK,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;EAAA;;AAEzE,OAAM,uBAAuB,GAAG,UAAC,OAAO,EAAE,UAAU,EAAK;AAC/D,MAAI,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,CAAA;;AAE1C,SAAO,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAA;EAC3C,CAAA;;SAJY,uBAAuB,GAAvB,uBAAuB;AAMpC,OAAM,MAAM,GAAG,UAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAK;;AAE7C,QAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;AACpE,cAAU,IAAI,CAAC,UAAU,CAAC,UAAK,OAAO,CAAC,IAAI,CAAC,SAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAI,OAAO,CAAE;EAClF,CAAA","file":"meta/compile/node-only/formatCompileErrorForConsole.js","sourcesContent":["import { blue, green, magenta, bold } from 'chalk'\nimport CompileError, { Warning, formatCode } from '../CompileError'\nimport Opts from '../private/Opts'\nimport { toArray } from '../private/U/Bag'\nimport type from '../private/U/type'\nimport { assert } from '../private/U/util'\n\nexport default (error, modulePath) => format(error.warning, modulePath, 'error')\n\nexport const formatWarningForConsole = (warning, modulePath) => {\n\ttype(warning, Warning, modulePath, String)\n\t// Extra space to match up with 'error'\n\treturn format(warning, modulePath, 'warn ')\n}\n\nconst format = (warning, modulePath, kind) => {\n\t// Turn code green\n\tconst message = toArray(formatCode(warning.message, green)).join('')\n\treturn `${blue(modulePath)}\\n${magenta(kind)} ${bold.red(warning.loc)} ${message}`\n}\n"],"sourceRoot":"/src"}