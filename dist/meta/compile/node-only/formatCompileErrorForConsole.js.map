{"version":3,"sources":["meta/compile/node-only/formatCompileErrorForConsole.js"],"names":[],"mappings":";;;;;;;;;;;mBAKe,UAAC,KAAK,EAAE,UAAU;SAAK,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;EAAA;;AAEzE,OAAM,uBAAuB,GAAG,UAAC,OAAO,EAAE,UAAU,EAAK;AAC/D,QAAK,OAAO,gBAPJ,OAAO,EAOQ,UAAU,EAAE,MAAM,CAAC,CAAA;;AAE1C,SAAO,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAA;EAC3C,CAAA;;SAJY,uBAAuB,GAAvB,uBAAuB;AAMpC,OAAM,MAAM,GAAG,UAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAK;;AAE7C,QAAM,OAAO,GAAG,aAbR,OAAO,CAaS,cAdP,UAAU,CAcQ,OAAO,CAAC,OAAO,SAfpC,KAAK,CAeuC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;AACpE,cAAU,OAhBF,IAAI,CAgBG,UAAU,CAAC,UAAK,OAhBV,OAAO,CAgBW,IAAI,CAAC,SAAI,OAhBlB,IAAI,CAgBmB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAI,OAAO,CAAE;EAClF,CAAA","file":"meta/compile/node-only/formatCompileErrorForConsole.js","sourcesContent":["import { blue, green, magenta, bold } from 'chalk'\nimport { Warning, formatCode } from '../CompileError'\nimport { toArray } from '../private/U/Bag'\nimport type from '../private/U/type'\n\nexport default (error, modulePath) => format(error.warning, modulePath, 'error')\n\nexport const formatWarningForConsole = (warning, modulePath) => {\n\ttype(warning, Warning, modulePath, String)\n\t// Extra space to match up with 'error'\n\treturn format(warning, modulePath, 'warn ')\n}\n\nconst format = (warning, modulePath, kind) => {\n\t// Turn code green\n\tconst message = toArray(formatCode(warning.message, green)).join('')\n\treturn `${blue(modulePath)}\\n${magenta(kind)} ${bold.red(warning.loc)} ${message}`\n}\n"],"sourceRoot":"/src"}