{"version":3,"sources":["meta/compile/private/Cx.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;KAIqB,EAAE;AACX,WADS,EAAE,CACV,IAAI,EAAE;yBADE,EAAE;;AAErB,OAAI,CAAC,IAAI,GAAG,IAAI,CAAA;AAChB,OAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;GAClB;;eAJmB,EAAE;;UAMlB,cAAC,GAAG,EAAE,OAAO,EAAE;AAClB,UAAM,eAAa,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA;IACzC;;;SARmB,EAAE;;;mBAAF,EAAE;;;;KAYV,UAAU;AACX,WADC,UAAU,CACV,EAAE,EAAE;yBADJ,UAAU;;AAErB,OAAI,CAAC,EAAE,GAAG,EAAE,CAAA;GACZ;;eAHW,UAAU;;UAKjB,eAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;AACzB,QAAI,CAAC,IAAI,EACR,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAA;IACxB;;;UAEG,cAAC,GAAG,EAAE,OAAO,EAAE;AAClB,QAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAA;IAC1B;;;UAEK,gBAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;AAC1B,QAAI,IAAI,EACP,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAA;IAC7C;;;UAEG,gBAAG;AAAE,WAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAA;IAAE;;;SAnBlB,UAAU;;;SAAV,UAAU,GAAV,UAAU;;AAsBvB,OAAM,MAAM,GAAG,UAAA,CAAC;SAAI,CAAC,YAAY,QAAQ,GAAG,CAAC,EAAE,GAAG,CAAC;EAAA,CAAA;;AAEnD,OAAM,OAAO,GAAG,UAAC,GAAG,EAAE,OAAO,EAAK;AACjC,KAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;AACjB,SAAO,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;AACzB,MAAI,GAAG,0BA1CM,GAAG,AA0CM,EACrB,GAAG,GAAG,cA3CW,aAAa,CA2CV,GAAG,CAAC,CAAA;AACzB,QAAK,GAAG,QAAO,OAAO,EAAE,MAAM,CAAC,CAAA;AAC/B,SAAO,cA9Ce,OAAO,CA8Cd,GAAG,EAAE,OAAO,CAAC,CAAA;EAC5B,CAAA","file":"meta/compile/private/Cx.js","sourcesContent":["import CompileError, { Warning } from '../CompileError'\nimport Loc, { Pos, singleCharLoc } from 'esast/dist/Loc'\nimport type from './U/type'\n\nexport default class Cx {\n\tconstructor(opts) {\n\t\tthis.opts = opts\n\t\tthis.warnings = []\n\t}\n\n\tfail(loc, message) {\n\t\tthrow CompileError(warning(loc, message))\n\t}\n}\n\n// Intended to be inherited by specific contexts.\nexport class SubContext {\n\tconstructor(cx) {\n\t\tthis.cx = cx\n\t}\n\n\tcheck(cond, loc, message) {\n\t\tif (!cond)\n\t\t\tthis.fail(loc, message)\n\t}\n\n\tfail(loc, message) {\n\t\tthis.cx.fail(loc, message)\n\t}\n\n\twarnIf(cond, loc, message) {\n\t\tif (cond)\n\t\t\tthis.cx.warnings.push(warning(loc, message))\n\t}\n\n\topts() { return this.cx.opts }\n}\n\nconst unlazy = _ => _ instanceof Function ? _() : _\n\nconst warning = (loc, message) => {\n\tloc = unlazy(loc)\n\tmessage = unlazy(message)\n\tif (loc instanceof Pos)\n\t\tloc = singleCharLoc(loc)\n\ttype(loc, Loc, message, String)\n\treturn Warning(loc, message)\n}\n"],"sourceRoot":"/src"}