{"version":3,"sources":["meta/compile/private/U/util.js"],"names":[],"mappings":";;;;;;;;AAAO,OACN,MAAM,GAAG,UAAA,IAAI,EAAI;AAChB,MAAI,CAAC,IAAI,EACR,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAA;EACrC;OAED,GAAG,GAAG,UAAA,CAAC;SAAI,OAAO,CAAC,GAAG,CACrB,CAAC,KAAK,IAAI,GAAG,MAAM,GACnB,CAAC,KAAK,SAAS,GAAG,WAAW,GAC7B,CAAC,CAAC,QAAQ,EAAE,CAAC;EAAA;OAEd,IAAI,GAAG,UAAA,GAAG,EAAI;AACb,MAAI,MAAM,CAAA;AACV,SAAO,YAAM;AACZ,OAAI,MAAM,KAAK,SAAS,EAAE;AACzB,UAAM,GAAG,GAAG,EAAE,CAAA;AACd,UAAM,CAAC,MAAM,KAAK,SAAS,CAAC,CAAA;IAC5B;AACD,UAAO,MAAM,CAAA;GACb,CAAA;EACD;;;;AAGD,WAAU,GAAG,UAAA,CAAC;SAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ;EAAA;OAE/C,aAAa,GAAG,UAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAK;AACnD,QAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACvC,SAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;GACrD,CAAC,CAAA;AACF,SAAO,UAAS,MAAM,EAAE;AAAE,UAAO,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;GAAE,CAAA;EAC5E;OAED,cAAc,GAAG,UAAC,UAAU,EAAE,KAAK,EAAK;AACvC,OAAK,CAAC,OAAO,CAAC,gBAAoB;;;OAAjB,IAAI;OAAE,IAAI;AAAS,OAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,IAAI,CAAA;GAAE,CAAC,CAAA;;AAExE,SAAO,YAAW;;;AAAE,UAAO,gBAAA,SAAS,CAAC,CAAC,CAAC,EAAC,UAAU,OAAC,eAAI,SAAS,CAAC,CAAA;GAAE,CAAA;EACnE;OAED,QAAQ,GAAG,YAAW;AACrB,QAAM,CAAC,GAAG,IAAI,GAAG,EAAE,CAAA;AACnB,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAC9C,KAAK,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAClC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AACV,SAAO,CAAC,CAAA;EACR,CAAA;SA3CD,MAAM,GAAN,MAAM;SAKN,GAAG,GAAH,GAAG;SAKH,IAAI,GAAJ,IAAI;SAYJ,UAAU,GAAV,UAAU;SAEV,aAAa,GAAb,aAAa;SAOb,cAAc,GAAd,cAAc;SAMd,QAAQ,GAAR,QAAQ","file":"meta/compile/private/U/util.js","sourcesContent":["export const\n\tassert = cond => {\n\t\tif (!cond)\n\t\t\tthrow new Error('Assertion failed.')\n\t},\n\n\tlog = _ => console.log(\n\t\t_ === null ? 'null' :\n\t\t_ === undefined ? 'undefined' :\n\t\t_.toString()),\n\n\tlazy = get => {\n\t\tlet cached\n\t\treturn () => {\n\t\t\tif (cached === undefined) {\n\t\t\t\tcached = get()\n\t\t\t\tassert(cached !== undefined)\n\t\t\t}\n\t\t\treturn cached\n\t\t}\n\t},\n\n\t// -0 is negative\n\tisPositive = n => n >= 0 && 1 / n !== -Infinity,\n\n\timplementMany = (holder, methodName, nameToImpl) => {\n\t\tObject.keys(nameToImpl).forEach(name => {\n\t\t\tholder[name].prototype[methodName] = nameToImpl[name]\n\t\t})\n\t\treturn function(target) { return target[methodName].apply(null, arguments) }\n\t},\n\n\timplementMany2 = (methodName, pairs) => {\n\t\tpairs.forEach(([ type, impl ]) => { type.prototype[methodName] = impl })\n\t\t// TODO:ES6 spread\n\t\treturn function() { return arguments[0][methodName](...arguments) }\n\t},\n\n\tsetUnion = function() {\n\t\tconst s = new Set()\n\t\tfor (let i = 0; i < arguments.length; i = i + 1)\n\t\t\tfor (let x of arguments[i].values())\n\t\t\t\ts.add(x)\n\t\treturn s\n\t}\n"],"sourceRoot":"/src"}