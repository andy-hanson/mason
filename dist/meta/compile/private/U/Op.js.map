{"version":3,"sources":["meta/compile/private/U/Op.js"],"names":[],"mappings":";;;;;;;;;;;;;mBAQwB,EAAE;SAeV,IAAI,GAAJ,IAAI;SAIJ,IAAI,GAAJ,IAAI;SAIJ,MAAM,GAAN,MAAM;;AAvBP,UAAS,EAAE,CAAC,MAAM,EAAE;AAClC,QAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA;AACtC,IAAE,CAAC,IAAI,GAAG,MAAM,CAAA;AAChB,SAAO,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;EACxB;;AACD,OAAM,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE;AAC3B,SAAO,EAAA,YAAG;AACT,kBAAa,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAG;GACnC;AACD,UAAQ,EAAA,YAAG;AACV,UAAO,IAAI,CAAC,OAAO,EAAE,CAAA;GACrB;EACD,CAAC,CAAA;;AAEK,OAAM,IAAI,GAAG,EAAE,CAAA;SAAT,IAAI,GAAJ,IAAI;;AACV,UAAS,IAAI,CAAC,CAAC,EAAE;AACvB,SAAO,CAAE,CAAC,CAAE,CAAA;EACZ;;AAEM,UAAS,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE;AAChC,SAAO,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAA;EACjC;;AAEM,UAAS,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;AAC1C,MAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAClB,OAAO,MAAM,EAAE,CAAA,KACX;AACJ,SAnCO,MAAM,CAmCN,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAA;AACvB,UAAO,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;GACpB;EACD","file":"meta/compile/private/U/Op.js","sourcesContent":["import { assert } from './util'\n\n/*\nCheap-ass option type.\nIt's just an array with 0 or 1 elements.\n*/\n\n// This constructs an Op *type*. Use Op.Some and Op.None to construct instances.\nexport default function Op(opType) {\n\tconst op = Object.create(Op.prototype)\n\top.type = opType\n\treturn Object.freeze(op)\n}\nObject.assign(Op.prototype, {\n\tgetName() {\n\t\treturn `Op(${this.type.getName()})`\n\t},\n\ttoString() {\n\t\treturn this.getName()\n\t}\n})\n\nexport const None = []\nexport function some(_) {\n\treturn [ _ ]\n}\n\nexport function opIf(cond, then) {\n\treturn cond ? some(then()) : None\n}\n\nexport function ifElse(op, ifSome, ifNone) {\n\tif (op.length === 0)\n\t\treturn ifNone()\n\telse {\n\t\tassert(op.length === 1)\n\t\treturn ifSome(op[0])\n\t}\n}\n"],"sourceRoot":"/src"}