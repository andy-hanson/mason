{"version":3,"sources":["meta/compile/private/U/types.js"],"names":[],"mappings":";;;;;;;;SAEgB,OAAO,GAAP,OAAO;;;;AAAhB,UAAS,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE;AACjD,SAAK,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;AACtD,QAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;AACpD,QAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;UAAI,OAAK,OAAO,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC;GAAA,CAAC,CAAA;;AAE/D,MAAI,CAAC,GAAG,8DAA8D,CAAA;AACtE,QAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACtC,IAAC,GAAG,CAAC,YAAS,MAAM,oBAAe,MAAM,SAAK,CAAA;GAC9C,CAAC,CAAA;AACF,GAAC,GAAG,CAAC,GAAG,WAAW,CAAA;AACnB,QAAM,OAAO,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAA;;AAEnD,SAAO,CAAC,WAAW,GAAG,IAAI,CAAA;AAC1B,SAAO,CAAC,QAAQ,GAAG;UAAM,IAAI;GAAA,CAAA;AAC7B,SAAO,CAAC,SAAS,GAAG,SAAS,CAAA;AAC7B,QAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE;AAChC,cAAW,EAAE,OAAO;AACpB,WAAQ,EAAA,YAAG;AAAE,WAAO,OAAO,CAAC,IAAI,CAAC,CAAA;IAAE;GACnC,CAAC,CAAA;;AAEF,SAAO,OAAO,CAAA;EACd;;AAED,UAAS,OAAO,CAAC,CAAC,EAAE;AACnB,QAAM,QAAQ,GAAG,UAAA,GAAG;UAAI,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;GAAA,CAAA;;AAElD,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAA,GAAI,IAAI,CAAA;AAChE,QAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AAC7B,SAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;AAClB,SAAM,GAAG,GAAG,GAAG,YAAY,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;AAC/D,IAAC,GAAG,CAAC,aAAU,GAAG,UAAK,QAAQ,CAAC,GAAG,CAAC,CAAE,CAAA;GACtC,CAAC,CAAA;AACF,SAAO,CAAC,GAAG,KAAK,CAAA;EAChB;;AAED,OAAM,KAAK,GAAG,UAAA,CAAC;SACd,CAAC,KAAK,IAAI,GAAG,MAAM,GAAG,CAAC,KAAK,SAAS,GAAG,WAAW,GAAG,CAAC,CAAC,QAAQ,EAAE;EAAA,CAAA","file":"meta/compile/private/U/types.js","sourcesContent":["import type from './type'\n\nexport function ObjType(name, superType, members) {\n\ttype(name, String, superType, Object, members, Object)\n\tconst prototype = Object.create(superType.prototype)\n\tObject.keys(members).forEach(key => type(members[key], Object))\n\n\tlet s = 'return function(props) { const _ = Object.create(prototype);'\n\tObject.keys(members).forEach(member => {\n\t\ts = s + `_[\"${member}\"] = props[\"${member}\"];`\n\t})\n\ts = s + 'return _}'\n\tconst theType = Function('prototype', s)(prototype)\n\n\ttheType.displayName = name\n\ttheType.toString = () => name\n\ttheType.prototype = prototype\n\tObject.assign(theType.prototype, {\n\t\tconstructor: theType,\n\t\ttoString() { return inspect(this) }\n\t})\n\n\treturn theType\n}\n\nfunction inspect(_) {\n\tconst indented = str => str.replace(/\\n/g, '\\n\\t')\n\n\tlet s = (_.constructor.displayName || _.constructor.name) + ' {'\n\tObject.keys(_).forEach(key => {\n\t\tconst val = _[key]\n\t\tconst str = val instanceof Array ? val.join(',\\n') : toStr(val)\n\t\ts = s + `\\n\\t${key}: ${indented(str)}`\n\t})\n\treturn s + '\\n}'\n}\n\nconst toStr = _ =>\n\t_ === null ? 'null' : _ === undefined ? 'undefined' : _.toString()\n\n"],"sourceRoot":"/src"}