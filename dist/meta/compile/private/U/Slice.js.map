{"version":3,"sources":["meta/compile/private/U/Slice.js"],"names":[],"mappings":"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","file":"meta/compile/private/U/Slice.js","sourcesContent":["import { isEmpty } from './Bag'\nimport { None, some } from './Op'\nimport { assert } from './util'\n\nexport default class Slice {\n\tconstructor(data, start, end) {\n\t\tthis.data = data\n\t\tif (start === undefined) {\n\t\t\tassert(end === undefined)\n\t\t\tthis.start = 0\n\t\t\tthis.end = data.length\n\t\t} else {\n\t\t\tthis.start = start\n\t\t\tthis.end = end\n\t\t\tassert(0 <= start && start <= end && end <= data.length)\n\t\t}\n\t}\n\n\tsize() {\n\t\treturn this.end - this.start\n\t}\n\n\tisEmpty() {\n\t\tassert(this.start <= this.end)\n\t\treturn this.start === this.end\n\t}\n\n\thead() {\n\t\tassert(!this.isEmpty())\n\t\treturn this.data[this.start]\n\t}\n\n\tsecond() {\n\t\tassert(this.size() >= 2)\n\t\treturn this.data[this.start + 1]\n\t}\n\n\tlast() {\n\t\tassert(!this.isEmpty())\n\t\treturn this.data[this.end - 1]\n\t}\n\n\ttail() {\n\t\tassert(!this.isEmpty())\n\t\treturn this._new(this.start + 1, this.end)\n\t}\n\n\trtail() {\n\t\tassert(!this.isEmpty())\n\t\treturn this._new(this.start, this.end - 1)\n\t}\n\n\topSplitOnceWhere(splitOn) {\n\t\tfor (let i = this.start; i < this.end; i = i + 1)\n\t\t\tif (splitOn(this.data[i]))\n\t\t\t\treturn some({\n\t\t\t\t\tbefore: this._new(this.start, i),\n\t\t\t\t\tat: this.data[i],\n\t\t\t\t\tafter: this._new(i + 1, this.end)\n\t\t\t\t})\n\t\treturn None\n\t}\n\n\topSplitManyWhere(splitOn) {\n\t\tlet iLast = this.start\n\t\tconst out = []\n\t\tfor (let i = this.start; i < this.end; i = i + 1)\n\t\t\tif (splitOn(this.data[i])) {\n\t\t\t\tout.push({ before: this._new(iLast, i), at: this.data[i] })\n\t\t\t\tiLast = i + 1\n\t\t\t}\n\n\t\tif (isEmpty(out))\n\t\t\treturn None\n\t\telse {\n\t\t\tout.push({ before: this._new(iLast, this.end) })\n\t\t\treturn some(out)\n\t\t}\n\t}\n\n\t_new(start, end) {\n\t\treturn new Slice(this.data, start, end)\n\t}\n\n\teach(f) {\n\t\tfor (let i = this.start; i < this.end; i = i + 1)\n\t\t\tf(this.data[i])\n\t}\n\n\tmap(f) {\n\t\tconst out = []\n\t\tthis.each(_ => out.push(f(_)))\n\t\treturn out\n\t}\n\n\tflatMap(f) {\n\t\tconst out = []\n\t\tthis.each(_ => out.push(...f(_)))\n\t\treturn out\n\t}\n\n\treduce(reducer, start) {\n\t\tlet acc = start\n\t\tthis.each(_ => acc = reducer(acc, _))\n\t\treturn acc\n\t}\n\n\ttoString() {\n\t\treturn '[' + this.data.slice(this.start, this.end).toString() + ']'\n\t}\n}\n"],"sourceRoot":"/src"}