{"version":3,"sources":["meta/compile/private/Lang.js"],"names":[],"mappings":"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","file":"meta/compile/private/Lang.js","sourcesContent":["import { newSet, newMap } from './U/util'\n\nconst g = [ '<~', '<~~' ]\nexport const GeneratorKeywords = newSet(g)\nexport const AssignKeywords = newSet([ '=', '. ' ].concat(g))\n\nexport const LineSplitKeywords = newSet(AssignKeywords, [ '->' ])\n\n// `export` is not a keyword, but `. ` assigns in module context become exports.\nexport const KAssign = newSet(AssignKeywords, [ 'export' ])\nexport const KFun = newSet([ '|', '~|' ])\nexport const CaseKeywords = newSet([ 'case', 'case!' ])\nexport const SpecialKeywords = newSet([ 'this', 'this-module-directory' ])\nexport const UseKeywords = newSet([ 'use!', 'use', 'use~', 'use-debug' ])\n\nexport const AllKeywords = newSet(\n\tLineSplitKeywords, KFun, CaseKeywords, SpecialKeywords, UseKeywords, [\n\t'~',\n\t':',\n\t'_',\n\t'debug',\n\t'debugger',\n\t'else',\n\t'end-loop!',\n\t'in',\n\t'loop!',\n\t'out',\n\t'region'\n])\n\nexport const ReservedWords = newSet([ 'for', 'return' ])\n\nexport const GroupKinds = newSet(['(', '[', '{', '->', 'ln', 'sp', '\"'])\n\nexport const GroupOpenToClose = newMap([\n\t['(', ')'],\n\t['[', ']'],\n\t['{', '}'],\n\t['->', '<-'],\n\t['ln', 'ln'],\n\t['sp', 'sp'],\n\t['\"', 'close\"']])\n\n// TODO: Allow Opts to specify additional globals.\nexport const JsGlobals = newSet([\n\t'Array',\n\t'Boolean',\n\t'Date',\n\t'Error',\n\t'EvalError',\n\t'Function',\n\t'JSON',\n\t'Math',\n\t'Number',\n\t'Object',\n\t'Promise',\n\t'RangeError',\n\t'ReferenceError',\n\t'RegExp',\n\t'String',\n\t'Symbol',\n\t'SyntaxError',\n\t'TypeError',\n\t'URIError',\n\t'decodeURI',\n\t'decodeURIComponent',\n\t'encodeURI',\n\t'encodeURIComponent',\n\t'eval',\n\t'undefined',\n\t'Buffer',\n\t'clearInterval',\n\t'clearTimeout',\n\t'console',\n\t'global',\n\t'setInterval',\n\t'setTimeout',\n\t// Not really globals, but it works out that way.\n\t'false', 'true', 'null'\n])\n\n// Anything not explicitly reserved is a valid name character.\n// A `~` may appear in a name, but not at the beginning.\nexport const NonNameCharacters = '()[]{}.:|_ \\n\\t\"`#;,'\nexport const ReservedCharacters = '`;,%^&\\\\'\n\nexport const defaultLoopName = 'anon-loop'\n\nexport const fileExtension = '.ms'\n"],"sourceRoot":"/src"}