{"version":3,"sources":["meta/compile/private/Lang.js"],"names":[],"mappings":"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","file":"meta/compile/private/Lang.js","sourcesContent":["import { setUnion } from './U/util'\n\nconst g = [ '<~', '<~~' ]\nexport const GeneratorKeywords = new Set(g)\nexport const AssignKeywords = new Set(['=', '. '].concat(g))\n\nexport const LineSplitKeywords = setUnion(AssignKeywords, new Set(['->']))\n\n// `export` is not a keyword, but `. ` assigns in module context become exports.\nexport const KAssign = setUnion(AssignKeywords, new Set(['export']))\nexport const KFun = new Set(['|', '~|'])\nexport const CaseKeywords = new Set(['case', 'case!'])\nexport const SpecialKeywords = new Set([ 'this', 'this-module-directory' ])\nexport const UseKeywords = new Set([ 'use!', 'use', 'use~', 'use-debug' ])\n\nexport const AllKeywords = setUnion(\n\tLineSplitKeywords, KFun, CaseKeywords, SpecialKeywords, UseKeywords, new Set([\n\t'~',\n\t':',\n\t'_',\n\t'debug',\n\t'debugger',\n\t'else',\n\t'end-loop!',\n\t'in',\n\t'loop!',\n\t'out',\n\t'region'\n]))\n\nexport const ReservedWords = new Set([ 'for', 'return' ])\n\nexport const GroupKinds = new Set(['(', '[', '{', '->', 'ln', 'sp', '\"'])\nexport const GroupPres = setUnion(GroupKinds, new Set([')', ']', '}', '<-', 'close\"']))\n\nexport const ReservedCharacters = new Set('`;,%^&\\\\')\n\nexport const GroupOpenToClose = new Map([\n\t['(', ')'],\n\t['[', ']'],\n\t['{', '}'],\n\t['->', '<-'],\n\t['ln', 'ln'],\n\t['sp', 'sp'],\n\t['\"', 'close\"']])\n\n// TODO: Allow Opts to specify additional globals.\nexport const JsGlobals = new Set([\n\t'Array',\n\t'Boolean',\n\t'Date',\n\t'Error',\n\t'EvalError',\n\t'Function',\n\t'JSON',\n\t'Math',\n\t'Number',\n\t'Object',\n\t'Promise',\n\t'RangeError',\n\t'ReferenceError',\n\t'RegExp',\n\t'String',\n\t'Symbol',\n\t'SyntaxError',\n\t'TypeError',\n\t'URIError',\n\t'decodeURI',\n\t'decodeURIComponent',\n\t'encodeURI',\n\t'encodeURIComponent',\n\t'eval',\n\t'undefined',\n\t'Buffer',\n\t'clearInterval',\n\t'clearTimeout',\n\t'console',\n\t'global',\n\t'setInterval',\n\t'setTimeout',\n\t// Not really globals, but it works out that way.\n\t'false', 'true', 'null'\n])\n\n// Anything not explicitly reserved is a valid name character.\n// A `~` may appear in a name, but not at the beginning.\nexport const isNameCharacter = (ch) => /[^()[\\]{}\\.:|_\\s\\\"`#;,]/.test(ch)\n\nexport const defaultLoopName = 'anon-loop'\n\nexport const fileExtension = '.ms'\n"],"sourceRoot":"/src"}