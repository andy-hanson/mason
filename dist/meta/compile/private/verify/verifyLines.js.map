{"version":3,"sources":["meta/compile/private/verify/verifyLines.js"],"names":[],"mappings":"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","file":"meta/compile/private/verify/verifyLines.js","sourcesContent":["import { code } from '../../CompileError'\nimport E, { Assign, AssignDestructure, Call, Debug, Do, ELiteral,\n\tGlobalAccess, Special, Yield, YieldTo } from '../../Expression'\nimport type from '../U/type'\nimport { v } from './util'\n\nexport default function verifyLines(vx, lines) {\n\tconst lineToLocals = new Map()\n\tlet prevLocals = []\n\tlet allNewLocals = []\n\n\tfunction processLine(line) {\n\t\tif (line instanceof Debug)\n\t\t\t// TODO: Do anything in this situation?\n\t\t\t// vx.check(!inDebug, line.loc, 'Redundant `debug`.')\n\t\t\tvx.withInDebug(true, () => line.lines.forEach(processLine))\n\t\telse {\n\t\t\tverifyIsStatement(vx, line)\n\t\t\tconst lineNews = lineNewLocals(line)\n\t\t\tprevLocals.forEach(prevLocal =>\n\t\t\t\tlineNews.forEach(newLocal =>\n\t\t\t\t\tvx.check(\n\t\t\t\t\t\tprevLocal.name !== newLocal.name, newLocal.loc,\n\t\t\t\t\t\t`${code(newLocal.name)} already declared at ${prevLocal.loc.start}`)))\n\t\t\tlineNews.forEach(_ => vx.registerLocal(_))\n\t\t\tconst newLocals = prevLocals.concat(lineNews)\n\t\t\tlineToLocals.set(line, prevLocals)\n\t\t\tprevLocals = newLocals\n\t\t\t// Final set value is answer\n\t\t\tallNewLocals = newLocals\n\t\t}\n\t}\n\n\tlines.forEach(processLine)\n\n\tfunction verifyLine(line) {\n\t\tif (line instanceof Debug)\n\t\t\tvx.withInDebug(true, () => line.lines.forEach(verifyLine))\n\t\telse\n\t\t\tvx.plusLocals(lineToLocals.get(line), () =>\n\t\t\t\tvx.plusPendingBlockLocals(allNewLocals, () =>\n\t\t\t\t\tv(vx)(line)))\n\t}\n\n\tlines.forEach(verifyLine)\n\n\treturn allNewLocals\n}\n\n// TODO: Clean up\nfunction verifyIsStatement(vx, line) {\n\tswitch (true) {\n\t\tcase line instanceof Do:\n\t\t// Some Vals are also conceptually Dos, but this was easier than multiple inheritance.\n\t\tcase line instanceof Call:\n\t\tcase line instanceof ELiteral && line.k === 'js':\n\t\tcase line instanceof Special && line.k === 'debugger':\n\t\t// OK, used to mean `pass`\n\t\tcase line instanceof GlobalAccess && line.name === 'null':\n\t\tcase line instanceof Yield:\n\t\tcase line instanceof YieldTo:\n\t\t\treturn\n\t\tdefault:\n\t\t\tvx.fail(line.loc, 'Expression in statement position.')\n\t}\n}\n\nfunction lineNewLocals(line) {\n\ttype(line, E)\n\treturn line instanceof Assign ?\n\t\t[ line.assignee ] :\n\t\tline instanceof AssignDestructure ?\n\t\tline.assignees :\n\t\t[ ]\n}\n"],"sourceRoot":"/src"}