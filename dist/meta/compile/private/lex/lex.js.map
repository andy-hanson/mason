{"version":3,"sources":["meta/compile/private/lex/lex.js"],"names":[],"mappings":";;;;;kBAawB,GAAG;KAblB,UAAU,OAAV,UAAU;;KACZ,IAAI;;KACJ,KAAK;;KACL,MAAM;;KACN,SAAS;;AAEhB,UAAS,KAAK,CAAC,GAAG,EAAE;AACnB,QAAM,GAAG,GAAG,EAAE,CAAA;AACd,OAAK,IAAI,EAAE,IAAI,GAAG,EACjB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;AACb,SAAO,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAA;EAC7B;;AAEc,UAAS,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE;;AAEpC,KAAG,GAAG,GAAG,GAAG,IAAI,CAAA;AAChB,QAAM,EAAE,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;AAC7B,MAAI,EAAE,GAAG,SAAS,CAAC,EAAE,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;AAC9C,MAAI,MAAM,CAAC,QAAQ,EAAE;AACpB,UAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;AACzB,KAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAA;AACd,UAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;GAC5B;AACD,MAAI,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAC1C,QAAM,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;AACvB,MAAI,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;AAC7C,SAAO,CAAC,CAAA;EACR","file":"meta/compile/private/lex/lex.js","sourcesContent":["import { SubContext } from '../Cx'\nimport type from '../U/type'\nimport group from './group'\nimport Stream from './Stream'\nimport ungrouped from './ungrouped'\n\nfunction eager(gen) {\n\tconst arr = []\n\tfor (let em of gen)\n\t\tarr.push(em)\n\treturn arr[Symbol.iterator]()\n}\n\nexport default function lex(cx, str) {\n\t// Lexing algorithm requires trailing newline\n\tstr = str + '\\n'\n\tconst lx = new SubContext(cx)\n\tlet ug = ungrouped(lx, new Stream(str), false)\n\tif (global.LOG_TIME) {\n\t\tconsole.time('ungrouped')\n\t\tug = eager(ug)\n\t\tconsole.timeEnd('ungrouped')\n\t}\n\tif (global.LOG_TIME) console.time('group')\n\tconst g = group(lx, ug)\n\tif (global.LOG_TIME) console.timeEnd('group')\n\treturn g\n}\n"],"sourceRoot":"/src"}