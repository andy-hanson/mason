{"version":3,"sources":["meta/compile/private/parse/parseFun.js"],"names":[],"mappings":"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","file":"meta/compile/private/parse/parseFun.js","sourcesContent":["import { code } from '../../CompileError'\nimport { BlockDo, BlockVal, Debug, Fun, LocalDeclare } from '../../Expression'\nimport { CaseKeywords, KFun } from '../Lang'\nimport { DotName, Group, Keyword } from '../Token'\nimport type from '../U/type'\nimport { flatMap } from '../U/Bag'\nimport Op, { ifElse, None, opIf, some } from '../U/Op'\nimport { assert, lazy } from '../U/util'\nimport parseLocalDeclares from './parseLocalDeclares'\nimport { parseSpaced } from './parseSpaced'\nimport Px from './Px'\n// TODO:ES6\nimport * as PC from './parseCase'\nimport * as PB from './parseBlock'\n\nexport default function parseFun(px, k) {\n\ttype(px, Px, k, KFun)\n\tconst { opReturnType, rest } = tryTakeReturnType(px)\n\tpx.check(!rest.isEmpty(), () => `Expected an indented block after ${code(k)}`)\n\tconst { args, opRestArg, block, opIn, opOut } = px.w(rest, argsAndBlock)\n\t// Need res declare if there is a return type or out condition.\n\tconst opResDeclare = ifElse(opReturnType,\n\t\trt => some(LocalDeclare.res(rt.loc, opReturnType)),\n\t\t() => opOut.map(o => LocalDeclare.res(o.loc, opReturnType)))\n\treturn Fun(px.loc, k, args, opRestArg, block, opIn, opResDeclare, opOut)\n}\n\nconst tryTakeReturnType = px => {\n\tif (!px.tokens.isEmpty()) {\n\t\tconst h = px.tokens.head()\n\t\tif (Group.isSpaced(h) && Keyword.isColon(h.tokens.head()))\n\t\t\treturn {\n\t\t\t\topReturnType: some(px.w(h.tokens.tail(), parseSpaced)),\n\t\t\t\trest: px.tokens.tail()\n\t\t\t}\n\t}\n\treturn { opReturnType: None, rest: px.tokens }\n}\n\nconst argsAndBlock = px => {\n\tconst h = px.tokens.head()\n\t// Might be `|case`\n\tif (Keyword.isCaseOrCaseDo(h)) {\n\t\tconst eCase = px.w(px.tokens.tail(), PC.parseCase, h.k, true)\n\t\tconst args = [ LocalDeclare.focus(h.loc) ]\n\t\treturn (h.k === 'case') ?\n\t\t\t{\n\t\t\t\targs, opRestArg: None, opIn: None, opOut: None,\n\t\t\t\tblock: BlockVal(px.loc, [ ], eCase)\n\t\t\t} :\n\t\t\t{\n\t\t\t\targs, opRestArg: None, opIn: None, opOut: None,\n\t\t\t\tblock: BlockDo(px.loc, [ eCase ])\n\t\t\t}\n\t} else {\n\t\tconst { before, lines } = PB.takeBlockLinesFromEnd(px)\n\t\tconst { args, opRestArg } = px.w(before, parseFunLocals)\n\t\tconst { opIn, opOut, rest } = px.w(lines, tryTakeInOut)\n\t\tconst block = px.w(rest, PB.parseBlockFromLines)\n\t\treturn { args, opRestArg, block, opIn, opOut }\n\t}\n}\n\nconst parseFunLocals = px => {\n\tif (px.tokens.isEmpty())\n\t\treturn { args: [], opRestArg: None }\n\telse {\n\t\tconst l = px.tokens.last()\n\t\tif (l instanceof DotName) {\n\t\t\tpx.check(l.nDots === 3, l.loc, 'Splat argument must have exactly 3 dots')\n\t\t\treturn {\n\t\t\t\targs: px.w(px.tokens.rtail(), parseLocalDeclares),\n\t\t\t\topRestArg: some(LocalDeclare(l.loc, l.name, None, false, false))\n\t\t\t}\n\t\t}\n\t\telse return { args: parseLocalDeclares(px), opRestArg: None }\n\t}\n}\n\nfunction tryTakeInOut(px) {\n\tfunction tryTakeInOrOut(lines, inOrOut) {\n\t\tif (!lines.isEmpty()) {\n\t\t\tconst firstLine = lines.head()\n\t\t\tassert(Group.isLine(firstLine))\n\t\t\tconst tokensFirst = firstLine.tokens\n\t\t\tif (Keyword.is(inOrOut)(tokensFirst.head()))\n\t\t\t\treturn {\n\t\t\t\t\ttook: some(Debug(\n\t\t\t\t\t\tfirstLine.loc,\n\t\t\t\t\t\tpx.w(tokensFirst, PB.parseLinesFromBlock))),\n\t\t\t\t\trest: lines.tail()\n\t\t\t\t}\n\t\t}\n\t\treturn { took: None, rest: lines }\n\t}\n\n\tconst { took: opIn, rest: restIn } = tryTakeInOrOut(px.tokens, 'in')\n\tconst { took: opOut, rest } = tryTakeInOrOut(restIn, 'out')\n\treturn { opIn, opOut, rest }\n}\n"],"sourceRoot":"/src"}