{"version":3,"sources":["meta/compile/private/parse/parseSingle.js"],"names":[],"mappings":"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","file":"meta/compile/private/parse/parseSingle.js","sourcesContent":["import { Call, ListSimple, ELiteral, GlobalAccess, LocalAccess,\n\tQuote, Special, Splat, This } from '../../Expression'\nimport { CallOnFocus, DotName, Group, Keyword, Literal, Name } from '../Token'\nimport { JsGlobals, SpecialKeywords } from '../Lang'\nimport type from '../U/type'\nimport { assert, lazy } from '../U/util'\nimport Px from './Px'\n// TODO:ES6\nimport * as PB from './parseBlock'\nimport * as ParseExpr from './parseExpr'\nimport * as PS from './parseSpaced'\n\nexport default function parseSingle(px) {\n\ttype(px, Px)\n\tconst t = px.tokens.head()\n\tassert(px.tokens.size() === 1)\n\tswitch (true) {\n\t\tcase t instanceof CallOnFocus:\n\t\t\treturn Call(px.loc, access(px, t.name), [ LocalAccess.focus(px.loc) ])\n\t\tcase t instanceof Literal:\n\t\t\treturn ELiteral(t.loc, t.value, t.k)\n\t\tcase t instanceof Name:\n\t\t\treturn access(px, t.name)\n\t\tcase t instanceof Keyword:\n\t\t\tif (t.k === '_')\n\t\t\t\treturn LocalAccess.focus(px.loc)\n\t\t\tif (SpecialKeywords.has(t.k))\n\t\t\t\treturn Special(px.loc, t.k)\n\t\t\t// Else fallthrough to fail\n\t\tcase t instanceof Group:\n\t\t\tswitch (t.k) {\n\t\t\t\tcase 'sp': return px.w(t.tokens, PS.parseSpaced)\n\t\t\t\tcase '->': return px.w(t.tokens, PB.blockWrap, 'val')\n\t\t\t\tcase '\"': return Quote(px.loc, t.tokens.map(tSub => px.wt(tSub, parseSingle)))\n\t\t\t\tcase '(': return px.w(t.tokens, ParseExpr.default)\n\t\t\t\tcase '[': return ListSimple(px.loc, px.w(t.tokens, ParseExpr.parseExprParts))\n\t\t\t\tdefault:\n\t\t\t\t\t// fallthrough\n\t\t\t}\n\t\tcase t instanceof DotName:\n\t\t\tif (t.nDots === 3)\n\t\t\t\treturn Splat(px.loc, LocalAccess(px.loc, t.name))\n\t\t\t// Else fallthrough to fail\n\t\tdefault:\n\t\t\tpx.fail(`Unexpected ${t}`)\n\t}\n}\n\nconst access = (px, name) =>\n\tJsGlobals.has(name) ? GlobalAccess(px.loc, name) : LocalAccess(px.loc, name)\n"],"sourceRoot":"/src"}