{"version":3,"sources":["meta/compile/private/parse/Px.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;KAKqB,EAAE;AACX,WADS,EAAE,CACV,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE;yBADT,EAAE;;AAErB,8BAFmB,EAAE,6CAEf,EAAE,EAAC;AACT,SAAK,MAAM,SAAQ,CAAA;AACnB,OAAI,CAAC,MAAM,GAAG,MAAM,CAAA;AACpB,OAAI,CAAC,GAAG,GAAG,GAAG,CAAA;GACd;;YANmB,EAAE;;eAAF,EAAE;;UAQjB,eAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;AACzB,QAAI,OAAO,KAAK,SAAS,EAAE;AAC1B,YAAO,GAAG,GAAG,CAAA;AACb,gCAXkB,EAAE,uCAWR,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,EAAC;KACpC,MACA,2BAbkB,EAAE,uCAaR,IAAI,EAAE,GAAG,EAAE,OAAO,EAAC;IAChC;;;UAES,oBAAC,MAAM,EAAE,OAAO,EAAE;AAC3B,+BAjBmB,EAAE,uCAiBT,MAAM,CAAC,OAAO,EAAE,EAAE;YAAM,aAAa,CAAC,MAAM,CAAC;KAAA,EAAE,OAAO,EAAC;IACnE;;;UAEG,cAAC,GAAG,EAAE,OAAO,EAAE;AAClB,QAAI,OAAO,KAAK,SAAS,EAAE;AAC1B,YAAO,GAAG,GAAG,CAAA;AACb,gCAvBkB,EAAE,sCAuBT,IAAI,CAAC,GAAG,EAAE,OAAO,EAAC;KAC7B,MACA,2BAzBkB,EAAE,sCAyBT,GAAG,EAAE,OAAO,EAAC;IACzB;;;UAEA,WAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;AAC/B,UAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;AACrB,QAAI,CAAC,MAAM,GAAG,MAAM,CAAA;AACpB,UAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAA;AAClB,QAAI,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,CAAC,MAAM,CAAC,CAAA;AAC9D,UAAM,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;AACtC,QAAI,CAAC,MAAM,GAAG,CAAC,CAAA;AACf,QAAI,CAAC,GAAG,GAAG,CAAC,CAAA;AACZ,WAAO,GAAG,CAAA;IACV;;;UAEC,YAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;AACf,WAAO,IAAI,CAAC,CAAC,CAAC,WAAU,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IACvC;;;SAzCmB,EAAE;QAJd,UAAU;;kBAIE,EAAE;;AA4CvB,OAAM,aAAa,GAAG,UAAA,EAAE;SAAI,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;EAAA,CAAA","file":"meta/compile/private/parse/Px.js","sourcesContent":["import Loc from 'esast/dist/Loc'\nimport { SubContext } from '../Cx'\nimport type from '../U/type'\nimport Slice from '../U/Slice'\n\nexport default class Px extends SubContext {\n\tconstructor(cx, tokens, loc) {\n\t\tsuper(cx)\n\t\ttype(tokens, Slice)\n\t\tthis.tokens = tokens\n\t\tthis.loc = loc\n\t}\n\n\tcheck(cond, loc, message) {\n\t\tif (message === undefined) {\n\t\t\tmessage = loc\n\t\t\tsuper.check(cond, this.loc, message)\n\t\t} else\n\t\t\tsuper.check(cond, loc, message)\n\t}\n\n\tcheckEmpty(tokens, message) {\n\t\tsuper.check(tokens.isEmpty(), () => locFromTokens(tokens), message)\n\t}\n\n\tfail(loc, message) {\n\t\tif (message === undefined) {\n\t\t\tmessage = loc\n\t\t\tsuper.fail(this.loc, message)\n\t\t} else\n\t\t\tsuper.fail(loc, message)\n\t}\n\n\tw(tokens, fun, arg, arg2, arg3) {\n\t\tconst t = this.tokens\n\t\tthis.tokens = tokens\n\t\tconst s = this.loc\n\t\tthis.loc = tokens.isEmpty() ? this.loc : locFromTokens(tokens)\n\t\tconst res = fun(this, arg, arg2, arg3)\n\t\tthis.tokens = t\n\t\tthis.loc = s\n\t\treturn res\n\t}\n\n\twt(t, fun, arg) {\n\t\treturn this.w(new Slice([t]), fun, arg)\n\t}\n}\n\nconst locFromTokens = ts => Loc(ts.head().loc.start, ts.last().loc.end)\n"],"sourceRoot":"/src"}