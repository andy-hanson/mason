"use strict";
if((typeof define!=="function"))var define=require("amdefine")(module);
define(["exports","../cash","../js","../private/bootstrap"],function(exports,$_0,js_1,bootstrap_2){
	exports._get=_ms.lazy(function(){
		const $=_ms.getDefaultExport($_0),_$2=_ms.getModule($_0),$after=_ms.get(_$2,"$after"),$map=_ms.get(_$2,"$map"),_$3=_ms.getModule(js_1),_new=_ms.get(_$3,"new"),_$4=_ms.getModule(bootstrap_2),msCall=_ms.get(_$4,"msCall");
		const $require=function $require(require,path){
			return _new($,function(resolve,reject){
				return require([path],resolve,reject)
			})
		};
		const dirname=function dirname(path){
			return path.replace(RegExp("/[^/]*$"),"")
		};
		const $get_45module=exports["$get-module"]=function(){
			const built={};
			const doc=built.doc="Retrieves module code and evaluates it.\nFirst parameter should be the result of using `require` as a global module.\nThis allows module-path to be relative to the module calling $get-module.\nThe module is represented as an object whose keys are its exports and whose `default` key is its default export.\nNote that `use~` lazily evaluates the content of a module, but eagerly loads the module code.";
			return _ms.set(function $get_45module(require,module_45path){
				_ms.checkContains(Function,require,"require");
				_ms.checkContains(String,module_45path,"module-path");
				return $after($require(require,module_45path),_ms.sub(msCall,"getModule"))
			},built)
		}();
		const $_64all_45modules=exports["$@all-modules"]=function(){
			const built={};
			const doc=built.doc="All listed modules, as generated by Mason's list-modules task.\nmodule-list-path should point to the modules-list file.\nrequire and module-list-path are like in $get-module.";
			return _ms.set(function $_64all_45modules(require,module_45list_45path){
				_ms.checkContains(Function,require,"require");
				_ms.checkContains(String,module_45list_45path,"module-list-path");
				const modules_45list_45dir=dirname(module_45list_45path);
				return $after($get_45module(require,module_45list_45path),function(mp){
					const module_45paths=msCall("getDefaultExport",mp);
					return $map(module_45paths,function(module_45path){
						const full_45path=(((""+_ms.show(modules_45list_45dir))+"/")+_ms.show(module_45path));
						return $get_45module(require,full_45path)
					})
				})
			},built)
		}();
		const name=exports.name="modules";
		return exports
	})
})
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZHkvcHJvZ3JhbW1pbmcvbWFzb24zL21hc29uL3NyYy9tZXRhL21vZHVsZXMubXMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7RUFLQSxlQUFZLGtCQUFBLFFBQVEsS0FDSTtVQUN2QixLQUFJLEVBQUcsU0FBQSxRQUFRLE9BQ007V0FBcEIsUUFBUSxDQUFFLE1BQU8sUUFBUTtHQUFBO0VBQUE7RUFFM0IsY0FBVyxpQkFBQSxLQUNJO1VBQWQsYUFBYyxPQUFRLFdBQVc7RUFBQTtFQUVsQyxxREFDWTs7R0FBWCxvQkFDQztrQkFLQSx1QkFBQSxRQUFpQixjQUNrQjtzQkFEM0I7c0JBQXFCO1dBQzdCLE9BQVEsU0FBUyxRQUFRLHVCQUFhLE9BQVE7R0FBQTs7RUFFaEQsMkRBQ2M7O0dBQWIsb0JBQ0M7a0JBR0EsMkJBQUEsUUFBaUIscUJBQ3VCO3NCQURoQztzQkFBMEI7SUFDbEMsMkJBQW1CLFFBQVE7V0FDM0IsT0FBUSxjQUFZLFFBQVEsc0JBQW1CLFNBQUEsR0FDRTtLQUFoRCxxQkFBZSxPQUFRLG1CQUFrQjtZQUN6QyxLQUFLLGVBQWMsU0FBQSxjQUNXO01BQTdCLGtCQUFhLEdBdEJpQixZQXNCaEIscUNBQW1CO2FBRWpDLGNBQVksUUFBUTtLQUFBO0lBQUE7R0FBQTs7RUFuQ3hCLHdCQUFBIiwiZmlsZSI6Im1ldGEvbW9kdWxlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYyJ9